# https://blog.callr.tech/building-docker-images-with-gitlab-ci-best-practices/
#image: docker:latest

services:
  - name: docker:dind
    command: ["--insecure-registry=harbor.neko.flab.fujitsu.co.jp:9000"]

variables:
  IMAGE_TAG: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA
  IMAGE_RELEASE_TAG: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME
  IMAGE_LATEST_TAG: $CI_REGISTRY/$CI_PROJECT_PATH:latest
  IMAGE_DEV_LATEST_TAG: $CI_REGISTRY/$CI_PROJECT_PATH:dev-latest
  DEPLOY_PROJECT_REPOSITORY: http://$CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD@harbor.neko.flab.fujitsu.co.jp:10080/$CI_PROJECT_PATH-deploy.git
  DEPLOY_DEV_BRANCH: dev
  KUSTOMIZE_DEV_PATH: overlays/development/
  KUSTOMIZE_PROD_PATH: overlays/production/
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE_TAG: 19.03.4
  PYTHON_IMAGE_TAG: 3.8.0-alpine3.10
  KUSTOMIZE_GIT_TAG: 1.0.0_2
  HTTP_PROXY: $http_proxy
  HTTPS_PROXY: $https_proxy
  
#before_script:
#  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

stages:
  - unittest
  - build
  - test
  - push
  - deploy
#  - integrate_test
  
unit-test:
  image: python:$PYTHON_IMAGE_TAG
  stage: unittest
  script:
    - python test_main.py
  except:
    - tags

image-build:
  image: docker:$DOCKER_IMAGE_TAG
  stage: build
  except:
    - tags
  script:
    - docker pull $IMAGE_DEV_LATEST_TAG || true
    - docker build -t $IMAGE_TAG --build-arg http_proxy=$HTTP_PROXY
                                 --build-arg https_proxy=$HTTPS_PROXY .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $IMAGE_TAG

image-test:
  image: docker:$DOCKER_IMAGE_TAG
  variables:
    GIT_STRATEGY: none
  stage: test
  except:
    - tags
  script:
    # イメージに脆弱性がある場合，ここでpullがエラーになる
    - docker pull $IMAGE_TAG
    - docker network create test-network
    - docker run -d --name $CI_PROJECT_NAME --network test-network -p $APP_PORT:$APP_PORT $IMAGE_TAG
    - sleep 5
    # testの中身を思いついていない
    - docker stop $CI_PROJECT_NAME && docker rm $CI_PROJECT_NAME
    - docker network rm test-network

push-dev-latest:
  variables:
    GIT_STRATEGY: none
  stage: push
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $IMAGE_DEV_LATEST_TAG
    - docker push $IMAGE_DEV_LATEST_TAG

push-latest:
  image: docker:$DOCKER_IMAGE_TAG
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - master
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $IMAGE_LATEST_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $IMAGE_LATEST_TAG

push-tag:
  image: docker:$DOCKER_IMAGE_TAG
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - tags
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $IMAGE_RELEASE_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $IMAGE_RELEASE_TAG

deploy-dev:
  image: harbor.neko.flab.fujitsu.co.jp:9000/kitajima/kustomize-git:$KUSTOMIZE_GIT_TAG
  variables:
    GIT_STRATEGY: none
  stage: deploy
  except:
    - tags
    - master
  script:
    - git clone $DEPLOY_PROJECT_REPOSITORY
    - cd $CI_PROJECT_NAME-deploy
    - git checkout $DEPLOY_DEV_BRANCH
    - cd $KUSTOMIZE_DEV_PATH
    - kustomize edit set image $IMAGE_TAG
    - git config --global user.email "gitlab-runner@gitlab.neko.flab.fujitsu.co.jp"
    - git config --global user.name "gitlab-runner"
    - git add .
    - git commit -m "Update dev service image to $CI_COMMIT_SHORT_SHA"
    - git push origin $DEPLOY_DEV_BRANCH

deproy-prod:
  image: harbor.neko.flab.fujitsu.co.jp:9000/kitajima/kustomize-git:$KUSTOMIZE_GIT_TAG
  variables:
    GIT_STRATEGY: none
  stage: deploy
  only:
    - tags
  script:
    - git clone $DEPLOY_PROJECT_REPOSITORY
    - cd $CI_PROJECT_NAME-deploy
    - git checkout $DEPLOY_DEV_BRANCH
    - cd $KUSTOMIZE_PROD_PATH
    - kustomize edit set image $IMAGE_RELEASE_TAG
    - git config --global user.email "gitlab-runner@gitlab.neko.flab.fujitsu.co.jp"
    - git config --global user.name "gitlab-runner"
    - git add .
    - git commit -m "Update prod service image to $CI_COMMIT_REF_NAME"
    - git push origin $DEPLOY_DEV_BRANCH
